Grammar

    0 $accept: prog $end

    1 prog: stmts

    2 stmts: %empty
    3      | stmt SEMICOLON stmts

    4 stmt: STRING
    5     | NUM
    6     | OTHER


Terminals, with rules where they appear

$end (0) 0
error (256)
STRING (258) 4
NUM (259) 5
OTHER (260) 6
SEMICOLON (261) 3


Nonterminals, with rules where they appear

$accept (7)
    on left: 0
prog (8)
    on left: 1, on right: 0
stmts (9)
    on left: 2 3, on right: 1 3
stmt (10)
    on left: 4 5 6, on right: 3


State 0

    0 $accept: . prog $end

    STRING  shift, and go to state 1
    NUM     shift, and go to state 2
    OTHER   shift, and go to state 3

    $default  reduce using rule 2 (stmts)

    prog   go to state 4
    stmts  go to state 5
    stmt   go to state 6


State 1

    4 stmt: STRING .

    $default  reduce using rule 4 (stmt)


State 2

    5 stmt: NUM .

    $default  reduce using rule 5 (stmt)


State 3

    6 stmt: OTHER .

    $default  reduce using rule 6 (stmt)


State 4

    0 $accept: prog . $end

    $end  shift, and go to state 7


State 5

    1 prog: stmts .

    $default  reduce using rule 1 (prog)


State 6

    3 stmts: stmt . SEMICOLON stmts

    SEMICOLON  shift, and go to state 8


State 7

    0 $accept: prog $end .

    $default  accept


State 8

    3 stmts: stmt SEMICOLON . stmts

    STRING  shift, and go to state 1
    NUM     shift, and go to state 2
    OTHER   shift, and go to state 3

    $default  reduce using rule 2 (stmts)

    stmts  go to state 9
    stmt   go to state 6


State 9

    3 stmts: stmt SEMICOLON stmts .

    $default  reduce using rule 3 (stmts)
